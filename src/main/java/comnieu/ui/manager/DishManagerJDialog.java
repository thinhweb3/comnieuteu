package comnieu.ui.manager;

import comnieu.dao.DishDAO_1;
import comnieu.dao.Impl.CategoryImpl_1;
import comnieu.ui.IngredientJDialog;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;




/**
 *
 * @author kimth
 */
public class DishManagerJDialog extends javax.swing.JFrame {
    private static final String driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    private static final String dburl = "jdbc:sqlserver://localhost\\SQLEXPRESS:1433;databaseName=RestaurantDB;encrypt=false;";
    private static final String username = "Phat_SQL";
    private static final String password = "12345";
    /**
     * Creates new form Dish
     */
    public DishManagerJDialog() {
        initComponents();
        loadLoaiMonAnToTable();
        loadMonAnToTable();
        setLocationRelativeTo(null);   
    }
    private void loadLoaiMonAnToTable() {
    comnieu.dao.CategoryDAO_1 daoLoai = new comnieu.dao.CategoryDAO_1();
    java.util.List<String> dsLoai = daoLoai.getAllMaLoaiMA();

    javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tbfood.getModel();
    model.setRowCount(0); // Xóa dữ liệu cũ

    for (String maLoai : dsLoai) {
        model.addRow(new Object[] { maLoai });
    }
}

private void loadMonAnToTable() {
    comnieu.dao.DishDAO_1 daoMon = new DishDAO_1();
    List<CategoryImpl_1> dsMon = daoMon.getAllMonAn(); 

    javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) btnfoods.getModel();
    model.setRowCount(0); // Xóa dữ liệu cũ

    for (CategoryImpl_1 mon : dsMon) {
        model.addRow(mon.toRow());
    }
   

}
public void addIngredientToTable(String name, String amount, String unit) {
    DefaultTableModel model = (DefaultTableModel) showIngredient.getModel();
    model.addRow(new Object[]{name, amount, unit});
}

  
    // ... các hàm khác



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        tabs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        btnfoods = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        btaddIngredient = new javax.swing.JButton();
        btncheckall = new javax.swing.JButton();
        btnuncheckall = new javax.swing.JButton();
        btndeletall = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbfood = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        newSizeDish = new javax.swing.JTextField();
        newUnitPriceDish = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        newNameCategoryDish = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        newNameCategory = new javax.swing.JTextField();
        btIngredientJDialog = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        showIngredient = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        btncreat = new javax.swing.JButton();
        btnclear = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout(5, 5));

        btnfoods.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Món Ăn", "Tên Món ĂN", "Size", "Đơn giá", "Trạng thái", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        btnfoods.setRowHeight(25);
        btnfoods.setSelectionBackground(new java.awt.Color(255, 255, 0));
        btnfoods.setSelectionForeground(new java.awt.Color(255, 0, 0));
        btnfoods.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        btnfoods.setShowGrid(true);
        btnfoods.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnfoodsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(btnfoods);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 2, 2));

        btaddIngredient.setText("Thêm");
        btaddIngredient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btaddIngredientActionPerformed(evt);
            }
        });
        jPanel3.add(btaddIngredient);

        btncheckall.setText("Chọn tất cả");
        btncheckall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncheckallActionPerformed(evt);
            }
        });
        jPanel3.add(btncheckall);

        btnuncheckall.setText("Bỏ chọn tất cả");
        btnuncheckall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnuncheckallActionPerformed(evt);
            }
        });
        jPanel3.add(btnuncheckall);

        btndeletall.setText("Xóa các mục chọn");
        btndeletall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeletallActionPerformed(evt);
            }
        });
        jPanel3.add(btndeletall);

        jPanel1.add(jPanel3, java.awt.BorderLayout.PAGE_END);

        jScrollPane2.setPreferredSize(new java.awt.Dimension(200, 263));

        tbfood.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tbfood.setForeground(new java.awt.Color(0, 0, 255));
        tbfood.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Loại Món Ăn"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbfood.setRowHeight(26);
        tbfood.setRowMargin(2);
        tbfood.setSelectionBackground(new java.awt.Color(204, 255, 204));
        tbfood.setSelectionForeground(new java.awt.Color(255, 0, 0));
        tbfood.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbfood.setShowGrid(false);
        tbfood.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbfoodMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbfood);

        jPanel1.add(jScrollPane2, java.awt.BorderLayout.LINE_START);

        tabs.addTab("DANH SÁCH", jPanel1);

        jPanel2.setLayout(new java.awt.BorderLayout());

        newSizeDish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newSizeDishActionPerformed(evt);
            }
        });

        newUnitPriceDish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newUnitPriceDishActionPerformed(evt);
            }
        });

        jLabel3.setText("Đơn giá");
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        jLabel4.setText("Size");

        jLabel5.setText("Tên Món Ăn");

        jLabel6.setText("Tên Loại");

        newNameCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newNameCategoryActionPerformed(evt);
            }
        });

        btIngredientJDialog.setText("Nguyên Liệu");
        btIngredientJDialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btIngredientJDialogActionPerformed(evt);
            }
        });

        showIngredient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Tên Nguyên Liệu", "Số Lượng", "Đơn Vị"
            }
        ));
        jScrollPane3.setViewportView(showIngredient);

        jPanel7.setLayout(new java.awt.GridLayout(1, 0, 2, 2));

        btncreat.setText("Tạo mới");
        btncreat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncreatActionPerformed(evt);
            }
        });
        jPanel7.add(btncreat);

        btnclear.setText("Nhập mới");
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });
        jPanel7.add(btnclear);

        jPanel8.setLayout(new java.awt.GridLayout(1, 0, 2, 2));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 757, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newNameCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newSizeDish, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newNameCategoryDish, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newUnitPriceDish, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(btIngredientJDialog)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newNameCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newNameCategoryDish, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel4)))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newUnitPriceDish, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newSizeDish, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btIngredientJDialog)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel5, java.awt.BorderLayout.CENTER);

        tabs.addTab("BIỂU MẪU", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabs, javax.swing.GroupLayout.DEFAULT_SIZE, 761, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(tabs, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnfoodsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnfoodsMouseClicked
       int row = btnfoods.getSelectedRow();

    if (row >= 0) {
        // Lấy giá trị của checkbox (cột cuối)
        Boolean isChecked = (Boolean) btnfoods.getValueAt(row, 5);

        // Chỉ xử lý nếu ô checkbox vừa được bật (true)
        if (Boolean.TRUE.equals(isChecked)) {
            // Lấy dishId từ cột 0 (Mã món ăn)
            Object value = btnfoods.getValueAt(row, 0);
            if (value != null) {
                try {
                    int dishId = Integer.parseInt(value.toString());

                    // Gọi DAO kiểm tra và cập nhật trạng thái
                   DishDAO_1 daoMon = new DishDAO_1();
                    boolean isAvailable = daoMon.kiemTraTrangThaiNguyenLieu(dishId);
                    int status = isAvailable ? 0 : 1;
                    daoMon.updateDishStatus(dishId, status);

                    // Cập nhật giá trị cột trạng thái (cột 4) trong bảng hiển thị
                    btnfoods.setValueAt(status == 0 ? "Còn" : "Hết", row, 4);

                } catch (NumberFormatException ex) {
                    ex.printStackTrace();
                }
            }
        }
    }
        // TODO add your handling code here:   int row = btnfoods.getSelectedRow();
        
    }//GEN-LAST:event_btnfoodsMouseClicked

    private void btncheckallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncheckallActionPerformed
        // TODO add your handling code here:   String ma = txtMMA.getText().trim();
        
    }//GEN-LAST:event_btncheckallActionPerformed

    private void btnuncheckallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnuncheckallActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnuncheckallActionPerformed

    private void btndeletallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeletallActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btndeletallActionPerformed

    private void tbfoodMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbfoodMouseClicked
        // TODO add your handling code here:
      int row = tbfood.getSelectedRow();
    if (row >= 0) {
        // cột 0 hiện đang là TÊN LOẠI (vd: "Phong Ngu")
        String tenLoai = String.valueOf(tbfood.getValueAt(row, 0));

        comnieu.dao.DishDAO_1 daoMon = new comnieu.dao.DishDAO_1();
        List<CategoryImpl_1> dsMon = daoMon.getMonAnByTenLoai(tenLoai);       // <-- ĐỔI HÀM Ở ĐÂY

        DefaultTableModel model = (DefaultTableModel) btnfoods.getModel();
        model.setRowCount(0);
        for (CategoryImpl_1 mon : dsMon) {
            model.addRow(mon.toRow());
        }
    }
    }//GEN-LAST:event_tbfoodMouseClicked

    private void btncreatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncreatActionPerformed
             String name = newNameCategoryDish.getText().trim();
    String size = newSizeDish.getText().trim();
    String unitPriceStr = newUnitPriceDish.getText().trim();
    String categoryName = newNameCategory.getText().trim();

    if (name.isEmpty() || size.isEmpty() || unitPriceStr.isEmpty() || categoryName.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin!");
        return;
    }

    double price;
    try {
        price = Double.parseDouble(unitPriceStr);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Đơn giá không hợp lệ!");
        return;
    }

   DishDAO_1 dao = new DishDAO_1();
 int categoryId = dao.getOrCreateCategoryIdByName(categoryName);

    if (categoryId == -1) {
        JOptionPane.showMessageDialog(this, "Không thể tạo loại món ăn!");
        return;
    }

   DishDAO_1 dishDAO = new DishDAO_1();
    int dishId = dishDAO.insertDishReturnId(name, size, price, categoryId);
    if (dishId == -1) {
        JOptionPane.showMessageDialog(this, "Thêm món ăn thất bại!");
        return;
    }

    // Thêm vào bảng hiển thị
    DefaultTableModel foodModel = (DefaultTableModel) btnfoods.getModel();
    foodModel.addRow(new Object[]{dishId, name, size, price, "Còn", false});

    // Lưu nguyên liệu
    DefaultTableModel ingModel = (DefaultTableModel) showIngredient.getModel();
    for (int i = 0; i < ingModel.getRowCount(); i++) {
        Object nameObj = ingModel.getValueAt(i, 0);
        Object quantityObj = ingModel.getValueAt(i, 1);
        Object unitObj = ingModel.getValueAt(i, 2);

        if (nameObj == null || quantityObj == null || unitObj == null) {
            JOptionPane.showMessageDialog(this, "Nguyên liệu dòng " + (i + 1) + " thiếu dữ liệu!");
            return;
        }

        String ingName = nameObj.toString().trim();
        String quantity = quantityObj.toString().trim();
        String unit = unitObj.toString().trim();

        if (ingName.isEmpty() || quantity.isEmpty() || unit.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nguyên liệu dòng " + (i + 1) + " bị trống!");
            return;
        }

        dishDAO.addIngredientToDish(String.valueOf(dishId), ingName, quantity, unit);
    }

    // Reset form
    newNameCategoryDish.setText("");
    newSizeDish.setText("");
    newUnitPriceDish.setText("");
    newNameCategory.setText("");
    ingModel.setRowCount(0);

        JOptionPane.showMessageDialog(this, "Đã thêm món ăn thành công!");

  // Nếu bạn muốn chỉ hiện món theo đúng loại vừa nhập:
  loadLoaiMonAnToTable();  // reload danh sách loại

  List<CategoryImpl_1> dsMon = new DishDAO_1().getMonAnByTenLoai(categoryName);

  DefaultTableModel model = (DefaultTableModel) btnfoods.getModel();
  model.setRowCount(0);
  for (CategoryImpl_1 mon : dsMon) {
      model.addRow(mon.toRow());
  }
// TODO add your handling code here:
    }//GEN-LAST:event_btncreatActionPerformed

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
        // TODO add your handling code here: newIdDish.setText("");
    newNameCategoryDish.setText("");
    newSizeDish.setText("");
    newUnitPriceDish.setText("");
    newNameCategory.setText("");

    DefaultTableModel model = (DefaultTableModel) showIngredient.getModel();
    model.setRowCount(0); // Xóa dữ liệu nguyên liệu

    javax.swing.JOptionPane.showMessageDialog(this, "Đã làm mới biểu mẫu!");
        
    }//GEN-LAST:event_btnclearActionPerformed

    private void newUnitPriceDishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newUnitPriceDishActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newUnitPriceDishActionPerformed

    private void newSizeDishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newSizeDishActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newSizeDishActionPerformed

    private void btaddIngredientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btaddIngredientActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btaddIngredientActionPerformed

    private void newNameCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newNameCategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newNameCategoryActionPerformed

    private void btIngredientJDialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btIngredientJDialogActionPerformed
        // TODO add your handling code here:
    IngredientJDialog dialog = new IngredientJDialog(this); // this = class Dish
    dialog.setLocationRelativeTo(this);
    dialog.setVisible(true);
    }//GEN-LAST:event_btIngredientJDialogActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DishManagerJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DishManagerJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DishManagerJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DishManagerJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DishManagerJDialog().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btIngredientJDialog;
    private javax.swing.JButton btaddIngredient;
    private javax.swing.JButton btncheckall;
    private javax.swing.JButton btnclear;
    private javax.swing.JButton btncreat;
    private javax.swing.JButton btndeletall;
    private javax.swing.JTable btnfoods;
    private javax.swing.JButton btnuncheckall;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField newNameCategory;
    private javax.swing.JTextField newNameCategoryDish;
    private javax.swing.JTextField newSizeDish;
    private javax.swing.JTextField newUnitPriceDish;
    private javax.swing.JTable showIngredient;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tbfood;
    // End of variables declaration//GEN-END:variables
}

